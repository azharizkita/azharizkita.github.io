{"version":3,"sources":["Application/Projects/index.js","Application/Welcome/index.js","Application/Blogs/index.js","Application/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Projects","props","setTitle","classes","React","useState","githubData","setGithubData","filters","setFilters","tagData","setTagData","repositories","setRepositories","useEffect","fetch","then","response","json","result","tagsData","processed","forEach","value","name","tags","undefined","description","metaDescription","split","length","map","val","trim","tag","Date","pushed_at","sorted","Object","keys","sort","a","b","push","error","console","filteredRepos","repo","isFiltered","filterName","includes","filter","className","style","padding","index","Chip","key","avatar","Avatar","label","onClick","e","variant","Grid","container","alignContent","alignItems","justify","i","item","xs","md","lg","Card","CardContent","minHeight","Typography","align","color","paddingBottom","Divider","width","Tooltip","title","icon","Update","updated_at","toLocaleDateString","toLocaleTimeString","Copyright","license","CardActions","Button","window","open","fullWidth","html_url","paddingTop","height","LinearProgress","valueBuffer","large","centers","Welcome","useTheme","isSmall","useMediaQuery","breakpoints","up","bio","setBio","log","component","Skeleton","alt","src","avatar_url","maxWidth","minWidth","GitHub","MailOutline","Blogs","flexGrow","menuButton","marginRight","App","openDrawer","setOpenDrawer","matchMedia","matches","isDark","setIsDark","ListItemLink","primary","to","ListItem","selected","button","useMemo","forwardRef","itemProps","ref","ListItemIcon","ListItemText","addEventListener","event","createMuiTheme","palette","main","secondary","type","ThemeProvider","CssBaseline","SwipeableDrawer","anchor","onClose","onOpen","role","AccountCircle","Assessment","Book","getFullYear","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Brightness4","Brightness7","path","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.0aaf0c81.chunk.js","sourcesContent":["import { Card, CardContent, Chip, Divider, Grid, Typography, makeStyles, Tooltip, Button, CardActions, Avatar, LinearProgress } from '@material-ui/core';\nimport { Update, Copyright } from '@material-ui/icons';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Projects = (props) => {\n    const setTitle = props.setTitle\n    const classes = useStyles()\n    const [githubData, setGithubData] = React.useState([])\n    const [filters, setFilters] = React.useState([])\n    const [tagData, setTagData] = React.useState([])\n    const [repositories, setRepositories] = React.useState([])\n    React.useEffect(() => {\n        setTitle('Projects')\n        try {\n            fetch('https://api.github.com/users/azharizkita/repos').then((response) =>\n                response.json()\n            ).then((result) => {\n                var tagsData = {}\n                var processed = {}\n                result.forEach((value) => {\n                    if (value.name !== 'azharizkita.github.io') {\n                        var tags = undefined\n                        if (value.description) {\n                            var metaDescription = value.description.split(']')\n                            value['description'] = metaDescription[1]\n                            tags = metaDescription[0].split('[')\n                            if (tags.length > 1) {\n                                value['tags'] = tags[1].split(',').map((val) => val.trim())\n                                value['tags'].forEach((tag) => {\n                                    if (typeof tagsData[tag] !== 'undefined') {\n                                        tagsData[tag] += 1\n                                    } else {\n                                        tagsData[tag] = 1\n                                    }\n                                })\n                            }\n                        }\n                        processed[+new Date(value.pushed_at)] = value\n                    }\n                })\n                var sorted = []\n                Object.keys(processed).sort((a, b) => b - a).forEach((value) => sorted.push(processed[value]))\n                setGithubData(sorted)\n                setTagData(tagsData)\n            })\n        } catch (error) {\n            console.error(error)\n        }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    React.useEffect(() => {\n        if (githubData) {\n            const filteredRepos = githubData.map((repo) => {\n                var isFiltered = true\n                filters.forEach((filterName) => {\n                    if (repo.tags) {\n                        if (!repo.tags.includes(filterName)) {\n                            isFiltered = false\n                        }\n                    } else {\n                        isFiltered = false\n                    }\n                })\n                if (isFiltered) {\n                    return repo\n                } else {\n                    return null\n                }\n            }).filter((val) => val !== null)\n            setRepositories(filteredRepos)\n        }\n    }, [filters, githubData])\n    return (\n        <>\n            {githubData.length !== 0 ? (\n                <>\n                    <div className={classes.root} style={{ padding: 25 }}>\n                        {tagData ? (\n                            Object.keys(tagData).map((tag, index) => (\n                                <Chip\n                                    key={index}\n                                    avatar={<Avatar>{tagData[tag]}</Avatar>}\n                                    label={tag}\n                                    onClick={() => {\n                                        if (filters.includes(tag)) {\n                                            setFilters(filters.filter(e => e !== tag))\n                                        } else {\n                                            setFilters([...filters, tag])\n                                        }\n                                    }}\n                                    variant={filters.includes(tag) ? 'default' : 'outlined'}\n                                />\n                            ))\n                        ) : ''}\n                    </div>\n                    <Grid\n                        container\n                        alignContent={'center'}\n                        alignItems={'center'}\n                        justify={'center'}\n                    >\n                        {repositories.length !== 0 ? repositories.map((value, i) => (\n                            <Grid key={i} item xs={12} md={4} lg={4} style={{ padding: 15 }}>\n                                <Card variant={'outlined'}>\n                                    <CardContent style={{ minHeight: 220 }}>\n                                        <Typography variant={'h6'} align={'center'} color={'textPrimary'}>\n                                            {value.name}\n                                        </Typography>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            <Grid item>\n                                                <Tooltip title={'Last update'}>\n                                                    <Chip\n                                                        icon={<Update />}\n                                                        label={new Date(value.updated_at).toLocaleDateString() + ', ' + new Date(value.updated_at).toLocaleTimeString()}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid item>\n                                                <Tooltip title={'License'}>\n                                                    <Chip\n                                                        icon={<Copyright />}\n                                                        label={value.license ? value.license.name : 'No License'}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            {value.tags ? value.tags.map((tag, index) => (\n                                                <Chip\n                                                    key={index}\n                                                    label={tag}\n                                                    variant={'default'}\n                                                />\n                                            )) : ''}\n                                        </Grid>\n                                        {value.tags ? <div style={{ paddingBottom: 5 }} /> : ''}\n                                        <Typography align={'center'}>\n                                            {value.description ? value.description : 'No desription.'}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        {value.tags ? (\n                                            value.tags.includes('Application') ? <Button color={'primary'} variant={'contained'} onClick={() => window.open('https://azharizkita.github.io/' + value.name + '/', '_blank')} fullWidth>Launch</Button> : ''\n                                        ) : ''}\n                                        <Button color={'primary'} variant={'contained'} onClick={() => window.open(value.html_url, '_blank')} fullWidth>Explore</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        )) : <Grid item style={{ paddingTop: '15%' }}>\n                                <Typography variant={'h5'} color={'textSecondary'}>Seems like i haven't created that at once yet :(</Typography>\n                            </Grid>}\n                    </Grid>\n                </>\n            ) : (\n                    <>\n                        <Grid\n                            container\n                            spacing={0}\n                            alignItems={'center'}\n                            justify={'center'}\n                            style={{ height: '80vh' }}\n                        >\n                            <Grid item style={{ width: 250 }}>\n                                <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                            </Grid>\n                        </Grid>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default Projects;\n","import { Avatar, Grid, Typography, makeStyles, Divider, Chip, useMediaQuery, useTheme } from '@material-ui/core'\nimport { GitHub, MailOutline } from '@material-ui/icons/';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    centers: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Welcome = (props) => {\n    const theme = useTheme()\n    const setTitle = props.setTitle\n    const classes = useStyles()\n    const isSmall = useMediaQuery(theme.breakpoints.up('sm'));\n    const [bio, setBio] = React.useState({})\n    React.useEffect(() => {\n        setTitle('Biography')\n        try {\n            fetch('https://api.github.com/users/azharizkita').then((response) =>\n                response.json()\n            ).then((value) => {\n                setBio(value)\n            });\n        } catch (error) {\n            console.error(error)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <>\n            {console.log(isSmall)}\n            <Grid\n                container\n                style={{ width: '100%', padding: 10, minHeight: isSmall ? '85vh' : '100vh' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                <Grid item xs={12} md={12} style={{ padding: 15 }}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                            <Typography variant={'h5'} align={'center'} component={'div'}>My name is {bio.name}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                                <div className={classes.centers}>\n                                    <Skeleton width={250} height={24} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Avatar alt=\"Remy Sharp\" src={bio.avatar_url} className={classes.large} />\n                    </div>\n                </Grid>\n                <div style={{ paddingBottom: 5 }} />\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15, maxWidth: 500 }}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'body1'} align={'center'}>Short summary about my activity? {bio.bio}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <div className={classes.centers}>\n                                    <Skeleton width={500} variant={'text'} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <Typography variant={'h6'} align={'center'}>Reach me out</Typography>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        {bio.name ? (\n                            <>\n                                <Chip\n                                    icon={<GitHub />}\n                                    label={'GitHub.com/azharizkita'}\n                                    onClick={() => window.open(bio.html_url, '_blank')}\n                                    variant={'outlined'}\n                                />\n                                <Chip\n                                    icon={<MailOutline />}\n                                    label={'azharizkita@icloud.com'}\n                                    onClick={() => window.open('mailto:azharizkita@icloud.com')}\n                                    variant={'outlined'}\n                                />\n                            </>\n                        ) : (\n                                <>\n                                    <Skeleton width={500} variant={'text'} />\n                                </>\n                            )\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Welcome","import { Grid, Typography } from '@material-ui/core'\nimport React from 'react'\n\nconst Blogs = (props) => {\n    const setTitle = props.setTitle\n    React.useEffect(() => {\n        setTitle('Blogs')\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <>\n            <Grid\n                container\n                style={{ width: '100%', padding: 10, height: '85vh' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                <Grid item>\n                    <Typography align={'center'} variant={'h5'} color={'textSecondary'}>Uh, guess I will finish this feature later soon!</Typography>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Blogs","import { AppBar, IconButton, Toolbar, Typography, makeStyles, ListItem, ListItemIcon, ListItemText, Tooltip, SwipeableDrawer, Grid, Divider } from '@material-ui/core';\nimport { Menu, AccountCircle, Assessment, Brightness7, Brightness4 } from '@material-ui/icons/';\nimport { BrowserRouter as Router, Switch, Route, Link as RouterLink } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Book } from '@material-ui/icons';\nimport Projects from './Projects'\nimport Welcome from './Welcome';\nimport React from 'react'\nimport Blogs from './Blogs';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles()\n    const [title, setTitle] = React.useState('')\n    const [openDrawer, setOpenDrawer] = React.useState(false)\n    const [isDark, setIsDark] = React.useState(window.matchMedia('(prefers-color-scheme: dark)').matches)\n    const ListItemLink = (props) => {\n        const { icon, primary, to } = props;\n        return (\n            <ListItem selected={title === primary} onClick={() => setOpenDrawer(false)} button component={React.useMemo(\n                () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n                [to],\n            )}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                <ListItemText primary={primary} />\n            </ListItem>\n        )\n    }\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {\n        if (event.matches) {\n            setIsDark(true)\n        } else {\n            setIsDark(false)\n        }\n    })\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#212121',\n            },\n            secondary: {\n                main: '#424242',\n            },\n            type: isDark ? 'dark' : 'light'\n        },\n    });\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Router>\n                    <SwipeableDrawer anchor={'left'} open={openDrawer} onClose={() => setOpenDrawer(false)} onOpen={() => setOpenDrawer(true)}>\n                        <div style={{ width: 'auto', minHeight: '100vh' }} role={'presentation'}>\n                            <Grid\n                                container\n                                style={{ width: 250, minHeight: '93%' }}\n                                justify={'center'}\n                                alignContent={'center'}\n                                alignItems={'center'}\n                            >\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/'} primary={'Biography'} icon={<AccountCircle />} />\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/projects'} primary={'Projects'} icon={<Assessment />} />\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/blogs'} primary={'Blogs'} icon={<Book />} />\n                                </Grid>\n                            </Grid>\n                            <Grid\n                                container\n                                style={{ width: 250, minHeight: '5%' }}\n                                justify={'center'}\n                                alignContent={'center'}\n                                alignItems={'center'}\n                            >\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <Divider />\n                                </Grid>\n                                <Typography align={'center'} color={'textSecondary'} variant={'caption'}>&copy; Copyright {new Date().getFullYear()}, Azhari Rizkita</Typography>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <Divider />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </SwipeableDrawer>\n                    <div className={classes.root}>\n                        <AppBar position={'sticky'}>\n                            <Toolbar>\n                                <IconButton edge={'start'} className={classes.menuButton} onClick={() => setOpenDrawer(true)} color=\"inherit\" aria-label=\"menu\">\n                                    <Menu />\n                                </IconButton>\n                                <Typography variant={'h6'} className={classes.title}>\n                                    {title}\n                                </Typography>\n                                <Tooltip title={isDark ? 'Switch to light mode' : 'Switch to dark mode'}>\n                                    <IconButton onClick={() => setIsDark(!isDark)}>\n                                        {isDark ? <Brightness4 style={{ color: 'white' }} /> : <Brightness7 style={{ color: 'white' }} />}\n                                    </IconButton>\n                                </Tooltip>\n                            </Toolbar>\n                        </AppBar>\n                        <div style={{ paddingBottom: 10 }} />\n                        <Switch>\n                            <Route path={'/projects'}>\n                                <Projects setTitle={(title) => setTitle(title)} />\n                            </Route>\n                            <Route path={'/blogs'}>\n                                <Blogs setTitle={(title) => setTitle(title)} />\n                            </Route>\n                            <Route path={'/'}>\n                                <Welcome setTitle={(title) => setTitle(title)} />\n                            </Route>\n                        </Switch>\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Application';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}