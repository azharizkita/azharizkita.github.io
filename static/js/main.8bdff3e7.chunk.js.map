{"version":3,"sources":["Application/Projects/index.js","Application/Welcome/index.js","Application/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Projects","classes","React","useState","githubData","setGithubData","filters","setFilters","tagData","setTagData","repositories","setRepositories","useEffect","fetch","then","response","json","result","tagsData","processed","forEach","value","name","tags","undefined","description","metaDescription","split","length","map","val","trim","tag","Date","pushed_at","sorted","Object","keys","sort","a","b","push","error","console","log","filteredRepos","repo","isFiltered","filterName","includes","filter","className","style","padding","index","Chip","key","avatar","Avatar","label","onClick","e","variant","Grid","container","alignContent","alignItems","justify","i","item","xs","md","lg","Card","CardContent","minHeight","Typography","align","color","paddingBottom","Divider","width","Tooltip","title","icon","Update","updated_at","toLocaleDateString","toLocaleTimeString","Copyright","license","CardActions","Button","window","open","fullWidth","html_url","paddingTop","height","LinearProgress","valueBuffer","large","centers","Welcome","props","setTitle","bio","setBio","component","Skeleton","alt","src","avatar_url","maxWidth","minWidth","GitHub","MailOutline","flexGrow","menuButton","marginRight","App","openDrawer","setOpenDrawer","matchMedia","matches","isDark","setIsDark","addEventListener","event","createMuiTheme","palette","primary","main","secondary","type","ThemeProvider","CssBaseline","Drawer","anchor","onClose","role","List","ListItem","button","selected","ListItemIcon","AccountCircle","ListItemText","Assessment","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Brightness4","Brightness7","state","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","catch","ReactDOM","render","document","getElementById","URL","process","href","origin","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8bdff3e7.chunk.js","sourcesContent":["import { Card, CardContent, Chip, Divider, Grid, Typography, makeStyles, Tooltip, Button, CardActions, Avatar, LinearProgress } from '@material-ui/core';\nimport { Update, Copyright } from '@material-ui/icons';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Projects = () => {\n    const classes = useStyles()\n    const [githubData, setGithubData] = React.useState([])\n    const [filters, setFilters] = React.useState([])\n    const [tagData, setTagData] = React.useState([])\n    const [repositories, setRepositories] = React.useState([])\n    React.useEffect(() => {\n        try {\n            fetch('https://api.github.com/users/azharizkita/repos').then((response) =>\n                response.json()\n            ).then((result) => {\n                var tagsData = {}\n                var processed = {}\n                result.forEach((value) => {\n                    if (value.name !== 'azharizkita.github.io') {\n                        var tags = undefined\n                        if (value.description) {\n                            var metaDescription = value.description.split(']')\n                            value['description'] = metaDescription[1]\n                            tags = metaDescription[0].split('[')\n                            if (tags.length > 1) {\n                                value['tags'] = tags[1].split(',').map((val) => val.trim())\n                                value['tags'].forEach((tag) => {\n                                    if (typeof tagsData[tag] !== 'undefined') {\n                                        tagsData[tag] += 1\n                                    } else {\n                                        tagsData[tag] = 1\n                                    }\n                                })\n                            }\n                        }\n                        processed[+new Date(value.pushed_at)] = value\n                    }\n                })\n                var sorted = []\n                Object.keys(processed).sort((a, b) => b - a).forEach((value) => sorted.push(processed[value]))\n                setGithubData(sorted)\n                setTagData(tagsData)\n            })\n        } catch (error) {\n            console.error(error)\n        }\n    }, [])\n    React.useEffect(() => {\n        console.log(filters)\n        if (githubData) {\n            const filteredRepos = githubData.map((repo) => {\n                var isFiltered = true\n                filters.forEach((filterName) => {\n                    if (repo.tags) {\n                        if (!repo.tags.includes(filterName)) {\n                            isFiltered = false\n                        }\n                    } else {\n                        isFiltered = false\n                    }\n                })\n                if (isFiltered) {\n                    return repo\n                } else {\n                    return null\n                }\n            }).filter((val) => val !== null)\n            setRepositories(filteredRepos)\n        }\n    }, [filters, githubData])\n    return (\n        <>\n            {githubData.length !== 0 ? (\n                <>\n                    <div className={classes.root} style={{ padding: 25 }}>\n                        {tagData ? (\n                            Object.keys(tagData).map((tag, index) => (\n                                <Chip\n                                    key={index}\n                                    avatar={<Avatar>{tagData[tag]}</Avatar>}\n                                    label={tag}\n                                    onClick={() => {\n                                        if (filters.includes(tag)) {\n                                            setFilters(filters.filter(e => e !== tag))\n                                        } else {\n                                            setFilters([...filters, tag])\n                                        }\n                                    }}\n                                    variant={filters.includes(tag) ? 'default' : 'outlined'}\n                                />\n                            ))\n                        ) : ''}\n                    </div>\n                    <Grid\n                        container\n                        alignContent={'center'}\n                        alignItems={'center'}\n                        justify={'center'}\n                    >\n                        {repositories.length !== 0 ? repositories.map((value, i) => (\n                            <Grid key={i} item xs={12} md={4} lg={4} style={{ padding: 15 }}>\n                                <Card variant={'outlined'}>\n                                    <CardContent style={{ minHeight: 220 }}>\n                                        <Typography variant={'h6'} align={'center'} color={'textPrimary'}>\n                                            {value.name}\n                                        </Typography>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            <Grid item>\n                                                <Tooltip title={'Last update'}>\n                                                    <Chip\n                                                        icon={<Update />}\n                                                        label={new Date(value.updated_at).toLocaleDateString() + ', ' + new Date(value.updated_at).toLocaleTimeString()}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid item>\n                                                <Tooltip title={'License'}>\n                                                    <Chip\n                                                        icon={<Copyright />}\n                                                        label={value.license ? value.license.name : 'No License'}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            {value.tags ? value.tags.map((tag, index) => (\n                                                <Chip\n                                                    key={index}\n                                                    label={tag}\n                                                    variant={'default'}\n                                                />\n                                            )) : ''}\n                                        </Grid>\n                                        {value.tags ? <div style={{ paddingBottom: 5 }} /> : ''}\n                                        <Typography align={'center'}>\n                                            {value.description ? value.description : 'No desription.'}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        {value.tags ? (\n                                            value.tags.includes('Application') ? <Button color={'primary'} variant={'contained'} onClick={() => window.open('https://azharizkita.github.io/' + value.name + '/', '_blank')} fullWidth>Launch</Button> : ''\n                                        ) : ''}\n                                        <Button color={'primary'} variant={'contained'} onClick={() => window.open(value.html_url, '_blank')} fullWidth>Explore</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        )) : <Grid item style={{ paddingTop: '15%' }}>\n                                <Typography variant={'h5'} color={'textSecondary'}>Seems like i haven't created that at once yet :(</Typography>\n                            </Grid>}\n                    </Grid>\n                </>\n            ) : (\n                    <>\n                        <Grid\n                            container\n                            spacing={0}\n                            alignItems={'center'}\n                            justify={'center'}\n                            style={{ height: '80vh' }}\n                        >\n                            <Grid item style={{ width: 250 }}>\n                                <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                            </Grid>\n                        </Grid>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default Projects;\n","import { Avatar, Grid, Typography, makeStyles, Divider, Chip } from '@material-ui/core'\nimport { GitHub, MailOutline } from '@material-ui/icons/';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    centers: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Welcome = (props) => {\n    const setTitle = props.setTitle\n    const classes = useStyles()\n    const [bio, setBio] = React.useState({})\n    React.useEffect(() => {\n        try {\n            fetch('https://api.github.com/users/azharizkita').then((response) =>\n                response.json()\n            ).then((value) => {\n                setBio(value)\n            });\n        } catch (error) {\n            console.error(error)\n        }\n    }, [])\n    return (\n        <>\n            <Grid\n                container\n                className={classes.root}\n                spacing={2}\n                style={{ width: '100%' }}\n            >\n                <Grid item xs={12} md={12} style={{ padding: 20 }}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                            <Typography variant={'h5'} align={'center'} component={'div'}>My name is {bio.name}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                                <div className={classes.centers}>\n                                    <Skeleton width={250} height={24} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <div className={classes.centers}>\n                        <Avatar alt=\"Remy Sharp\" src={bio.avatar_url} className={classes.large} />\n                    </div>\n                </Grid>\n                <div style={{ paddingBottom: 5 }} />\n                <Grid item xs={12} md={12}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'body1'} align={'center'}>Short summary about my activity? {bio.bio}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <div className={classes.centers}>\n                                    <Skeleton width={500} variant={'text'} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'body1'} component={'div'} align={'center'}>You may check out my <Chip\n                                label={'projects'}\n                                onClick={() => setTitle('Projects')}\n                                variant={'outlined'}\n                            /></Typography>\n                        </>\n                    ) : (\n                            <>\n                                <div className={classes.centers}>\n                                    <Skeleton width={250} variant={'text'} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <Typography variant={'h6'} align={'center'}>Reach me out</Typography>\n                </Grid>\n                <Grid item xs={12} md={12}>\n                    <div className={classes.centers}>\n                        {bio.name ? (\n                            <>\n                                <Chip\n                                    icon={<GitHub />}\n                                    label={'GitHub.com/azharizkita'}\n                                    onClick={() => window.open(bio.html_url, '_blank')}\n                                    variant={'outlined'}\n                                />\n                                <Chip\n                                    icon={<MailOutline />}\n                                    label={'azharizkita@icloud.com'}\n                                    onClick={() => window.open('mailto:azharizkita@icloud.com')}\n                                    variant={'outlined'}\n                                />\n                            </>\n                        ) : (\n                                <>\n                                    <Skeleton width={500} variant={'text'} />\n                                </>\n                            )\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Welcome","import { AppBar, IconButton, Toolbar, Typography, makeStyles, Drawer, List, ListItem, ListItemIcon, ListItemText, Divider, Tooltip } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport { Menu, AccountCircle, Assessment, Brightness7, Brightness4 } from '@material-ui/icons/';\nimport CssBaseline from '@material-ui/core/CssBaseline'\nimport Projects from './Projects'\nimport Welcome from './Welcome';\nimport React from 'react'\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles()\n    const [title, setTitle] = React.useState('Biography')\n    const [openDrawer, setOpenDrawer] = React.useState(false)\n    const [isDark, setIsDark] = React.useState(window.matchMedia('(prefers-color-scheme: dark)').matches)\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {\n        if (event.matches) {\n            setIsDark(true)\n        } else {\n            setIsDark(false)\n        }\n    })\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#212121',\n            },\n            secondary: {\n                main: '#424242',\n            },\n            type: isDark ? 'dark' : 'light'\n        },\n    });\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Drawer anchor={'left'} open={openDrawer} onClose={() => setOpenDrawer(false)}>\n                    <div style={{ width: 'auto' }} role=\"presentation\">\n                        <List style={{ width: 250 }}>\n                            <ListItem button selected={title === 'Biography'} onClick={() => {\n                                setTitle('Biography')\n                                setOpenDrawer(false)\n                            }}>\n                                <ListItemIcon>{<AccountCircle />}</ListItemIcon>\n                                <ListItemText primary={'Biography'} />\n                            </ListItem>\n                            <ListItem button selected={title === 'Projects'} onClick={() => {\n                                setTitle('Projects')\n                                setOpenDrawer(false)\n                            }}>\n                                <ListItemIcon>{<Assessment />}</ListItemIcon>\n                                <ListItemText primary={'Projects'} />\n                            </ListItem>\n                        </List>\n                    </div>\n                    <Divider />\n                </Drawer>\n                <div className={classes.root}>\n                    <AppBar position={'sticky'}>\n                        <Toolbar>\n                            <IconButton edge=\"start\" className={classes.menuButton} onClick={() => setOpenDrawer(true)} color=\"inherit\" aria-label=\"menu\">\n                                <Menu />\n                            </IconButton>\n                            <Typography variant=\"h6\" className={classes.title}>\n                                {title}\n                            </Typography>\n                            <Tooltip title={isDark ? 'Switch to light mode' : 'Switch to dark mode'}>\n                                <IconButton onClick={() => setIsDark(!isDark)}>\n                                    {isDark ? <Brightness4 style={{ color: 'white' }} /> : <Brightness7 style={{ color: 'white' }} />}\n                                </IconButton>\n                            </Tooltip>\n                        </Toolbar>\n                    </AppBar>\n                    <div style={{ paddingBottom: 10 }} />\n                    {title === 'Biography' ? <Welcome setTitle={(state) => setTitle(state)} /> : (title === 'Projects' ? <Projects /> : '')}\n                </div>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Application';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}