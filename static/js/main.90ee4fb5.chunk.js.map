{"version":3,"sources":["Application/Projects/index.js","Application/Welcome/index.js","Application/Blogs/BlogContainer/index.js","Application/Blogs/index.js","Application/index.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","display","justifyContent","flexWrap","margin","spacing","Projects","props","setTitle","classes","React","useState","githubData","setGithubData","filters","setFilters","tagData","setTagData","repositories","setRepositories","useEffect","fetch","then","response","json","result","tagsData","processed","forEach","value","name","tags","undefined","description","metaDescription","split","length","map","val","trim","tag","Date","pushed_at","sorted","Object","keys","sort","a","b","push","error","console","filteredRepos","repo","isFiltered","filterName","includes","filter","className","style","padding","index","Chip","key","avatar","Avatar","label","onClick","e","variant","Grid","container","alignContent","alignItems","justify","i","item","xs","md","lg","Card","CardContent","minHeight","Typography","align","color","paddingBottom","Divider","width","Tooltip","title","icon","Update","updated_at","toLocaleDateString","toLocaleTimeString","Copyright","license","CardActions","Button","window","open","fullWidth","html_url","paddingTop","height","LinearProgress","valueBuffer","large","centers","Welcome","useTheme","isSmall","useMediaQuery","breakpoints","up","bio","setBio","component","Skeleton","alt","src","avatar_url","maxWidth","minWidth","GitHub","MailOutline","BlogContainer","state","loading","content","handleNetworkErrors","bind","this","getGist","prevProps","prevState","snapshot","gist","file","id","setState","setupCallback","script","document","createElement","url","type","onerror","head","appendChild","nextState","div","replace","doc","DOMParser","parseFromString","querySelectorAll","el","remove","finalHTML","body","outerHTML","dangerouslySetInnerHTML","__html","Component","Blogs","uniqueId","openId","setRefresher","blogs","setBlogs","blogId","setBlogId","openBlog","setOpenBlog","ButtonLink","to","now","useMemo","forwardRef","itemProps","ref","blog","metadata","created_at","resorted","sortedBlog","log","Dialog","fullScreen","onClose","DialogTitle","DialogContent","DialogActions","values","Schedule","flexGrow","menuButton","marginRight","App","URLSearchParams","location","search","urlParameters","setParameters","section","get","openDrawer","setOpenDrawer","matchMedia","matches","isDark","setIsDark","ListItemLink","primary","ListItem","selected","button","ListItemIcon","ListItemText","addEventListener","event","createMuiTheme","palette","main","secondary","ThemeProvider","CssBaseline","SwipeableDrawer","anchor","onOpen","role","AccountCircle","Assessment","Book","getFullYear","AppBar","position","Toolbar","IconButton","edge","aria-label","Menu","Brightness4","Brightness7","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.90ee4fb5.chunk.js","sourcesContent":["import { Card, CardContent, Chip, Divider, Grid, Typography, makeStyles, Tooltip, Button, CardActions, Avatar, LinearProgress } from '@material-ui/core';\nimport { Update, Copyright } from '@material-ui/icons';\nimport React from 'react';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Projects = (props) => {\n    const setTitle = props.setTitle\n    const classes = useStyles()\n    const [githubData, setGithubData] = React.useState([])\n    const [filters, setFilters] = React.useState([])\n    const [tagData, setTagData] = React.useState([])\n    const [repositories, setRepositories] = React.useState([])\n    React.useEffect(() => {\n        setTitle('Projects')\n        try {\n            fetch('https://api.github.com/users/azharizkita/repos').then((response) =>\n                response.json()\n            ).then((result) => {\n                var tagsData = {}\n                var processed = {}\n                result.forEach((value) => {\n                    if (value.name !== 'azharizkita.github.io') {\n                        var tags = undefined\n                        if (value.description) {\n                            var metaDescription = value.description.split(']')\n                            value['description'] = metaDescription[1]\n                            tags = metaDescription[0].split('[')\n                            if (tags.length > 1) {\n                                value['tags'] = tags[1].split(',').map((val) => val.trim())\n                                value['tags'].forEach((tag) => {\n                                    if (typeof tagsData[tag] !== 'undefined') {\n                                        tagsData[tag] += 1\n                                    } else {\n                                        tagsData[tag] = 1\n                                    }\n                                })\n                            }\n                        }\n                        processed[+new Date(value.pushed_at)] = value\n                    }\n                })\n                var sorted = []\n                Object.keys(processed).sort((a, b) => b - a).forEach((value) => sorted.push(processed[value]))\n                setGithubData(sorted)\n                setTagData(tagsData)\n            })\n        } catch (error) {\n            console.error(error)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    React.useEffect(() => {\n        if (githubData) {\n            const filteredRepos = githubData.map((repo) => {\n                var isFiltered = true\n                filters.forEach((filterName) => {\n                    if (repo.tags) {\n                        if (!repo.tags.includes(filterName)) {\n                            isFiltered = false\n                        }\n                    } else {\n                        isFiltered = false\n                    }\n                })\n                if (isFiltered) {\n                    return repo\n                } else {\n                    return null\n                }\n            }).filter((val) => val !== null)\n            setRepositories(filteredRepos)\n        }\n    }, [filters, githubData])\n    return (\n        <>\n            {githubData.length !== 0 ? (\n                <>\n                    <div className={classes.root} style={{ padding: 25 }}>\n                        {tagData ? (\n                            Object.keys(tagData).map((tag, index) => (\n                                <Chip\n                                    key={index}\n                                    avatar={<Avatar>{tagData[tag]}</Avatar>}\n                                    label={tag}\n                                    onClick={() => {\n                                        if (filters.includes(tag)) {\n                                            setFilters(filters.filter(e => e !== tag))\n                                        } else {\n                                            setFilters([...filters, tag])\n                                        }\n                                    }}\n                                    variant={filters.includes(tag) ? 'default' : 'outlined'}\n                                />\n                            ))\n                        ) : ''}\n                    </div>\n                    <Grid\n                        container\n                        alignContent={'center'}\n                        alignItems={'center'}\n                        justify={'center'}\n                    >\n                        {repositories.length !== 0 ? repositories.map((value, i) => (\n                            <Grid key={i} item xs={12} md={4} lg={4} style={{ padding: 15 }}>\n                                <Card variant={'outlined'}>\n                                    <CardContent style={{ minHeight: 220 }}>\n                                        <Typography variant={'h6'} align={'center'} color={'textPrimary'}>\n                                            {value.name}\n                                        </Typography>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            <Grid item>\n                                                <Tooltip title={'Last update'}>\n                                                    <Chip\n                                                        icon={<Update />}\n                                                        label={new Date(value.updated_at).toLocaleDateString() + ', ' + new Date(value.updated_at).toLocaleTimeString()}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                            <Grid item>\n                                                <Tooltip title={'License'}>\n                                                    <Chip\n                                                        icon={<Copyright />}\n                                                        label={value.license ? value.license.name : 'No License'}\n                                                        variant={'outlined'}\n                                                    />\n                                                </Tooltip>\n                                            </Grid>\n                                        </Grid>\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Divider />\n                                        <div style={{ paddingBottom: 10 }} />\n                                        <Grid\n                                            container\n                                            className={classes.root}\n                                            style={{ width: '100%' }}\n                                        >\n                                            {value.tags ? value.tags.map((tag, index) => (\n                                                <Chip\n                                                    key={index}\n                                                    label={tag}\n                                                    variant={'default'}\n                                                />\n                                            )) : ''}\n                                        </Grid>\n                                        {value.tags ? <div style={{ paddingBottom: 5 }} /> : ''}\n                                        <Typography align={'center'}>\n                                            {value.description ? value.description : 'No desription.'}\n                                        </Typography>\n                                    </CardContent>\n                                    <CardActions>\n                                        {value.tags ? (\n                                            value.tags.includes('Application') ? <Button color={'primary'} variant={'contained'} onClick={() => window.open('https://azharizkita.github.io/' + value.name + '/', '_blank')} fullWidth>Launch</Button> : ''\n                                        ) : ''}\n                                        <Button color={'primary'} variant={'contained'} onClick={() => window.open(value.html_url, '_blank')} fullWidth>Explore</Button>\n                                    </CardActions>\n                                </Card>\n                            </Grid>\n                        )) : <Grid item style={{ paddingTop: '15%' }}>\n                                <Typography variant={'h5'} color={'textSecondary'}>Seems like i haven't created that at once yet :(</Typography>\n                            </Grid>}\n                    </Grid>\n                </>\n            ) : (\n                    <>\n                        <Grid\n                            container\n                            spacing={0}\n                            alignItems={'center'}\n                            justify={'center'}\n                            style={{ height: '80vh' }}\n                        >\n                            <Grid item style={{ width: 250 }}>\n                                <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                            </Grid>\n                        </Grid>\n                    </>\n                )\n            }\n        </>\n    )\n}\n\nexport default Projects;\n","import { Avatar, Grid, Typography, makeStyles, Divider, Chip, useMediaQuery, useTheme } from '@material-ui/core'\nimport { GitHub, MailOutline } from '@material-ui/icons/';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport React from 'react'\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(20),\n        height: theme.spacing(20),\n    },\n    centers: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Welcome = (props) => {\n    const theme = useTheme()\n    const setTitle = props.setTitle\n    const classes = useStyles()\n    const isSmall = useMediaQuery(theme.breakpoints.up('sm'));\n    const [bio, setBio] = React.useState({})\n    React.useEffect(() => {\n        setTitle('Biography')\n        try {\n            fetch('https://api.github.com/users/azharizkita').then((response) =>\n                response.json()\n            ).then((value) => {\n                setBio(value)\n            });\n        } catch (error) {\n            console.error(error)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <>\n            <Grid\n                container\n                style={{ width: '100%', padding: 10, minHeight: isSmall ? '85vh' : '100vh' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                <Grid item xs={12} md={12} style={{ padding: 15 }}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                            <Typography variant={'h5'} align={'center'} component={'div'}>My name is {bio.name}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <Typography variant={'h5'} align={'center'}>Greetings!</Typography>\n                                <div className={classes.centers}>\n                                    <Skeleton width={250} height={24} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Avatar alt=\"Remy Sharp\" src={bio.avatar_url} className={classes.large} />\n                    </div>\n                </Grid>\n                <div style={{ paddingBottom: 5 }} />\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15, maxWidth: 500 }}>\n                    {bio.name ? (\n                        <>\n                            <Typography variant={'body1'} align={'center'}>Short summary about my activity? {bio.bio}.</Typography>\n                        </>\n                    ) : (\n                            <>\n                                <div className={classes.centers}>\n                                    <Skeleton width={500} variant={'text'} />\n                                </div>\n                            </>\n                        )\n                    }\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        <Divider style={{ maxWidth: 550, width: '100%', minWidth: 100 }} />\n                    </div>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <Typography variant={'h6'} align={'center'}>Reach me out</Typography>\n                </Grid>\n                <Grid item xs={12} md={12} style={{ paddingBottom: 15 }}>\n                    <div className={classes.centers}>\n                        {bio.name ? (\n                            <>\n                                <Chip\n                                    icon={<GitHub />}\n                                    label={'GitHub.com/azharizkita'}\n                                    onClick={() => window.open(bio.html_url, '_blank')}\n                                    variant={'outlined'}\n                                />\n                                <Chip\n                                    icon={<MailOutline />}\n                                    label={'azharizkita@icloud.com'}\n                                    onClick={() => window.open('mailto:azharizkita@icloud.com')}\n                                    variant={'outlined'}\n                                />\n                            </>\n                        ) : (\n                                <>\n                                    <Skeleton width={500} variant={'text'} />\n                                </>\n                            )\n                        }\n                    </div>\n                </Grid>\n            </Grid>\n        </>\n    )\n}\n\nexport default Welcome","import { Grid, LinearProgress, Typography } from '@material-ui/core';\nimport React, { Component } from 'react';\n\nexport default class BlogContainer extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            loading: true,\n            title: '',\n            content: ''\n        };\n\n        this.handleNetworkErrors = this.handleNetworkErrors.bind(this);\n    }\n\n    componentDidMount() {\n        this.getGist();\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        if (prevProps.gist !== this.props.gist) this.getGist();\n    }\n\n    async getGist() {\n        const { gist, file } = this.props,\n            id = gist.split('/')[1];\n\n        if (!id) return this.setState({ loading: false, error: `${gist} is not valid format` });\n\n        await this.setState({ loading: true });\n        this.setupCallback(id);\n\n        const script = document.createElement('script');\n        let url = `https://gist.github.com/${gist}.json?callback=gist_callback_${id}`;\n        if (file) url += `&file=${file}`;\n        script.type = 'text/javascript';\n        script.src = url;\n        script.onerror = (e) => this.handleNetworkErrors(e);\n        document.head.appendChild(script);\n    }\n\n    handleNetworkErrors(e) {\n        this.setState({\n            loading: false,\n            error: `${this.props.gist} failed to load`\n        });\n    }\n\n    setupCallback(id) {\n        window[`gist_callback_${id}`] = function (gist) {\n            const nextState = { loading: false, error: gist.error || null };\n            if (!nextState.error) {\n                nextState.title = gist.description;\n                nextState.content = `${gist.div.replace(/href=/g, 'target=\"_blank\" href=')}`\n            }\n            this.setState(nextState);\n        }.bind(this);\n    }\n\n    render() {\n        if (this.state.loading) {\n            return <Grid\n                container\n                style={{ width: '100%', padding: 10, height: '100%' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                <Grid item style={{ width: 250 }}>\n                    <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                </Grid>\n            </Grid>\n        } else if (this.state.error) {\n            return <Grid\n                container\n                style={{ width: '100%', padding: 10, height: '100%' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                <Grid item style={{ width: 400 }}>\n                    <Typography variant={'h6'} align={'center'} color={'textSecondary'}>This may tak longer than expected...</Typography>\n                    <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                </Grid>\n            </Grid>\n        } else {\n            const removeElements = (elms) => elms.forEach(el => el.remove());\n            var parser = new DOMParser();\n            var doc = parser.parseFromString(this.state.content, 'text/html')\n            removeElements(doc.querySelectorAll(\".gist-meta\"));\n            var finalHTML = doc.body.outerHTML.replace('<body>', '').replace('</body>', '').trim();\n            return <section className={'gist__content'} dangerouslySetInnerHTML={{ __html: finalHTML }} />\n        }\n    }\n}","import { Button, Card, CardActions, CardContent, Chip, Dialog, DialogActions, DialogContent, DialogTitle, Divider, Grid, LinearProgress, makeStyles, Tooltip, Typography } from '@material-ui/core';\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Schedule } from '@material-ui/icons';\nimport BlogContainer from './BlogContainer'\nimport React from 'react';\nimport Skeleton from '@material-ui/lab/Skeleton';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        display: 'flex',\n        justifyContent: 'center',\n        flexWrap: 'wrap',\n        '& > *': {\n            margin: theme.spacing(0.5),\n        },\n    },\n}));\n\nconst Blogs = (props) => {\n    const uniqueId = props.openId\n    const setRefresher = props.setRefresher\n    const classes = useStyles()\n    const setTitle = props.setTitle\n    const [blogs, setBlogs] = React.useState([])\n    const [blogId, setBlogId] = React.useState()\n    const [openBlog, setOpenBlog] = React.useState(false)\n    const ButtonLink = (props) => {\n        const { to } = props;\n        return (\n            <Button color={'primary'} onClick={() => {\n                setRefresher(Date.now())\n                setOpenBlog(true)\n            }} component={React.useMemo(\n                () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n                [to],\n            )} variant={'contained'} fullWidth>Read Blog</Button>\n        )\n    }\n    React.useEffect(() => {\n        if (uniqueId) {\n            setBlogId(uniqueId)\n            setOpenBlog(true)\n        } else {\n            setBlogId(undefined)\n        }\n    }, [uniqueId])\n    React.useEffect(() => {\n        setTitle('Blogs')\n        try {\n            fetch('https://api.github.com/users/azharizkita/gists').then((response) =>\n                response.json()\n            ).then((result) => {\n                var processed = {}\n                result.forEach(blog => {\n                    var metadata = blog.description.split('-')\n                    var type = metadata[0].trim()\n                    if (type === 'Blog') {\n                        processed[+new Date(blog.created_at)] = blog\n                        processed[+new Date(blog.created_at)]['type'] = type\n                        processed[+new Date(blog.created_at)]['title'] = metadata[1].trim()\n                        processed[+new Date(blog.created_at)]['description'] = metadata[2].trim()\n                    }\n                });\n                var sorted = []\n                Object.keys(processed).sort((a, b) => b - a).forEach((value) => sorted.push(processed[value]))\n                var resorted = {}\n                sorted.forEach((sortedBlog) => {\n                    resorted[sortedBlog.id] = sortedBlog\n                    console.log(sortedBlog)\n                })\n                setBlogs(resorted)\n            })\n        } catch (error) {\n            console.error(error)\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n    return (\n        <>\n            <Dialog\n                fullScreen\n                open={openBlog}\n                onClose={() => {\n                    setOpenBlog(false)\n                }}\n            >\n                <DialogTitle className={classes.root}>{blogs && blogs[blogId] ? blogs[blogId].title : <Skeleton width={250} height={35} />}</DialogTitle>\n                <DialogContent>\n                    <BlogContainer\n                        gist={'azharizkita/' + blogId}\n                        file={'index.md'}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button variant={'contained'} onClick={() => {\n                        setOpenBlog(false)\n                    }} color={'primary'}>Close</Button>\n                </DialogActions>\n            </Dialog>\n            <Grid\n                container\n                style={{ width: '100%', padding: 10, height: '85vh' }}\n                justify={'center'}\n                alignContent={'center'}\n                alignItems={'center'}\n            >\n                {Object.keys(blogs).length !== 0 ? (\n                    Object.values(blogs).map((blog, i) => (\n                        <Grid key={i} item xs={12} md={4} lg={4} style={{ padding: 15 }}>\n                            <Card variant={'outlined'}>\n                                <CardContent style={{ minHeight: 220 }}>\n                                    <Typography variant={'h6'} align={'center'} color={'textPrimary'}>\n                                        {blog.title}\n                                    </Typography>\n                                    <div style={{ paddingBottom: 10 }} />\n                                    <Divider />\n                                    <div style={{ paddingBottom: 10 }} />\n                                    <Grid\n                                        container\n                                        className={classes.root}\n                                        style={{ width: '100%' }}\n                                    >\n                                        <Grid item>\n                                            <Tooltip title={'Last update'}>\n                                                <Chip\n                                                    icon={<Schedule />}\n                                                    label={new Date(blog.created_at).toLocaleDateString() + ', ' + new Date(blog.created_at).toLocaleTimeString()}\n                                                    variant={'outlined'}\n                                                />\n                                            </Tooltip>\n                                        </Grid>\n                                    </Grid>\n                                    <div style={{ paddingBottom: 10 }} />\n                                    <Divider />\n                                    <div style={{ paddingBottom: 10 }} />\n                                    <Typography align={'center'}>\n                                        {blog.description ? blog.description : 'No desription.'}\n                                    </Typography>\n                                </CardContent>\n                                <CardActions>\n                                    <ButtonLink to={'/?section=blogs&id=' + blog.id} />\n                                </CardActions>\n                            </Card>\n                        </Grid>\n                    ))\n                ) : <Grid item style={{ width: 250 }}>\n                        <LinearProgress variant={'buffer'} value={null} valueBuffer={null} />\n                    </Grid>}\n            </Grid>\n        </>\n    )\n}\n\nexport default Blogs","import { AppBar, IconButton, Toolbar, Typography, makeStyles, ListItem, ListItemIcon, ListItemText, Tooltip, SwipeableDrawer, Grid, Divider } from '@material-ui/core';\nimport { Menu, AccountCircle, Assessment, Brightness7, Brightness4 } from '@material-ui/icons/';\nimport { BrowserRouter as Router, Link as RouterLink } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { Book } from '@material-ui/icons';\nimport Projects from './Projects';\nimport Welcome from './Welcome';\nimport React from 'react';\nimport Blogs from './Blogs';\n\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        flexGrow: 1,\n    },\n    menuButton: {\n        marginRight: theme.spacing(2),\n    },\n    title: {\n        flexGrow: 1,\n    },\n}));\n\nconst App = () => {\n    const classes = useStyles()\n    // eslint-disable-next-line no-unused-vars\n    const [refresher, setRefresher] = React.useState()\n    const [urlParameters, setParameters] = React.useState(new URLSearchParams(window.location.search))\n    const section = urlParameters.get('section')\n    const id = urlParameters.get('id')\n    const [title, setTitle] = React.useState('')\n    const [openDrawer, setOpenDrawer] = React.useState(false)\n    const [isDark, setIsDark] = React.useState(window.matchMedia('(prefers-color-scheme: dark)').matches)\n    const ListItemLink = (props) => {\n        const { icon, primary, to } = props;\n        return (\n            <ListItem selected={title === primary} onClick={() => setOpenDrawer(false)} button component={React.useMemo(\n                () => React.forwardRef((itemProps, ref) => <RouterLink to={to} ref={ref} {...itemProps} />),\n                [to],\n            )}>\n                {icon ? <ListItemIcon>{icon}</ListItemIcon> : null}\n                <ListItemText primary={primary} />\n            </ListItem>\n        )\n    }\n    window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {\n        if (event.matches) {\n            setIsDark(true)\n        } else {\n            setIsDark(false)\n        }\n    })\n    const theme = createMuiTheme({\n        palette: {\n            primary: {\n                main: '#212121',\n            },\n            secondary: {\n                main: '#424242',\n            },\n            type: isDark ? 'dark' : 'light'\n        },\n    });\n    React.useEffect(() => {\n        setParameters(new URLSearchParams(window.location.search))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [window.location.search])\n    return (\n        <>\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <Router>\n                    <SwipeableDrawer anchor={'left'} open={openDrawer} onClose={() => setOpenDrawer(false)} onOpen={() => setOpenDrawer(true)}>\n                        <div style={{ width: 'auto', height: '100vh' }} role={'presentation'}>\n                            <Grid\n                                container\n                                style={{ width: 250, height: '100%' }}\n                                justify={'center'}\n                                alignContent={'center'}\n                                alignItems={'center'}\n                            >\n                                <Typography align={'center'} color={'textPrimary'} variant={'h6'}>Section</Typography>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <div style={{ paddingBottom: 10 }}></div>\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/?section=biography'} primary={'Biography'} icon={<AccountCircle />} />\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/?section=projects'} primary={'Projects'} icon={<Assessment />} />\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <ListItemLink to={'/?section=blogs'} primary={'Blogs'} icon={<Book />} />\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <div style={{ paddingBottom: 10 }}></div>\n                                </Grid>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <Divider />\n                                </Grid>\n                                <Typography align={'center'} color={'textSecondary'} variant={'caption'}>&copy; Copyright {new Date().getFullYear()}, Azhari Rizkita</Typography>\n                                <Grid item xs={12} md={12} lg={12}>\n                                    <Divider />\n                                </Grid>\n                            </Grid>\n                        </div>\n                    </SwipeableDrawer>\n                    <div className={classes.root}>\n                        <AppBar position={'sticky'}>\n                            <Toolbar>\n                                <IconButton edge={'start'} className={classes.menuButton} onClick={() => setOpenDrawer(true)} color=\"inherit\" aria-label=\"menu\">\n                                    <Menu />\n                                </IconButton>\n                                <Typography variant={'h6'} className={classes.title}>\n                                    {title}\n                                </Typography>\n                                <Tooltip title={isDark ? 'Switch to light mode' : 'Switch to dark mode'}>\n                                    <IconButton onClick={() => setIsDark(!isDark)}>\n                                        {isDark ? <Brightness4 style={{ color: 'white' }} /> : <Brightness7 style={{ color: 'white' }} />}\n                                    </IconButton>\n                                </Tooltip>\n                            </Toolbar>\n                        </AppBar>\n                        <div style={{ paddingBottom: 10 }} />\n                        {section ? (\n                            section === 'blogs' ? <Blogs openId={id} setRefresher={(state) => setRefresher(state)} setTitle={(title) => setTitle(title)} /> : (\n                                section === 'projects' ? <Projects setTitle={(title) => setTitle(title)} /> : (\n                                    section === 'biography' ? <Welcome setTitle={(title) => setTitle(title)} /> :\n                                        <Welcome setTitle={(title) => setTitle(title)} />\n                                )\n                            )\n                        ) : <Welcome setTitle={(title) => setTitle(title)} />}\n                    </div>\n                </Router>\n            </ThemeProvider>\n        </>\n    )\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Application';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}